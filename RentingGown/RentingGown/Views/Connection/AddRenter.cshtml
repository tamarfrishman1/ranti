@model RentingGown.Models.Renters

@{
    ViewBag.Title = "AddRenter";
}
<script>
    function ChangeTypeToText() {
        document.getElementById("pass").type = 'text';
    }
    function ChangeTypeToPass() {
        document.getElementById("pass").type = 'password';
    }
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" dir="rtl">
        <h2>הרשם כמשכיר באתר</h2>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-2">סיסמה</label>
            <div class="col-md-10">
                <input type="password" required maxlength="4" minlength="4" name="password" id="pass" />
                <img src="~/Images/eye.png" id="imgEye" style="    position: absolute !important;top: 33% !important;right: 13% !important;" onmouseover="ChangeTypeToText()" onmouseout="ChangeTypeToPass()" />
            </div>
        </div>

        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.password, "סיסמה", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @required = "required", @maxlength = "4", @minlength = "4" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                <img src="~/Images/eye.png" id="imgEye" onmouseover="ChangeTypeToText()" onmouseout="ChangeTypeToPass()" />
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.fname, "שם פרטי", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lname, "שם משפחה", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone, "טלפון", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @required = "required", @maxlength = "7", @minlength = "7" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cellphone, "סלולארי", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cellphone, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", @minlength = "10" } })
                @Html.ValidationMessageFor(model => model.cellphone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, "עיר", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, "כתובת", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_area, "אזור בארץ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_area", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.id_area, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="הרשם" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
    <h3 class="@ViewBag.class1">
        @ViewBag.ErrorExists
    </h3>
    <h3 class="@ViewBag.class2">
        @ViewBag.ErrorExistsPassword
    </h3>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
