
@{
    ViewBag.Title = "Register";
}
<script>
    function afterLoad() {
        if (document.getElementById("errorMsg").name == "error")
            swal({
                icon: 'error',
                title: 'נתקלנו בבעיה',
                text: 'יש להחליף את שם המשתמש או את הסיסמה.'
            })
    }
</script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<!-- Optional: include a polyfill for ES6 Promises for IE11 and Android browser -->
<script src="https://cdn.jsdelivr.net/npm/promise-polyfill"></script>
<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
    var place = {};
    function blurAddress() {
        if (!place.geometry)
            swal({
                icon: 'error',
                title: 'נתקלנו בבעיה',
                text: 'כתובת לא תקינה.'
            })
    }
    
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -33.8688, lng: 151.2195 },
            zoom: 13
        });
        var card = document.getElementById('pac-card');
        var input = document.getElementById('pac-input');
        var register = document.getElementById('register');
        var types = document.getElementById('type-selector');
        var strictBounds = document.getElementById('strict-bounds-selector');

        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

        var autocomplete = new google.maps.places.Autocomplete(input);

        // Bind the map's bounds (viewport) property to the autocomplete object,
        // so that the autocomplete requests use the current map bounds for the
        // bounds option in the request.
        autocomplete.bindTo('bounds', map);

        // Set the data fields to return when the user selects a place.
        autocomplete.setFields(
            ['address_components', 'geometry', 'icon', 'name']);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        input.addEventListener('blur', function () {
            infowindow.close();
            marker.setVisible(false);
            place = autocomplete.getPlace();
            if (!place) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }


            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }

            infowindowContent.children['place-icon'].src = place.icon;
            infowindowContent.children['place-name'].textContent = place.name;
            infowindowContent.children['place-address'].textContent = address;
            infowindow.open(map, marker);
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            radioButton.addEventListener('click', function () {
                autocomplete.setTypes(types);
            });
        }

        setupClickListener('changetype-all', []);
        setupClickListener('changetype-address', ['address']);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);

        document.getElementById('use-strict-bounds')
            .addEventListener('click', function () {
                console.log('Checkbox clicked! New state=' + this.checked);
                autocomplete.setOptions({ strictBounds: this.checked });
            });
    }
</script>
<body onload="afterLoad()">
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #description {
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
        }

        #infowindow-content .title {
            font-weight: bold;
        }

        /*#infowindow-content {
                   display: none;
               }*/

        #map #infowindow-content {
            display: inline;
        }

        .pac-card {
            margin: 10px 10px 0 0;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            background-color: #fff;
            font-family: Roboto;
        }

        #pac-container {
            padding-bottom: 12px;
            margin-right: 12px;
        }

        .pac-controls {
            display: inline-block;
            padding: 5px 11px;
        }

            .pac-controls label {
                font-family: Roboto;
                font-size: 13px;
                font-weight: 300;
            }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 400px;
        }

            #pac-input:focus {
                border-color: #4d90fe;
            }

        #title {
            color: #fff;
            background-color: #4d90fe;
            font-size: 25px;
            font-weight: 500;
            padding: 6px 12px;
        }
    </style>
    <section>
        <div class="block gray">
            <div class="container">
                <div class="row">
                    <div class="col-md-6 col-md-offset-3">
                        <div class="account-popup-sec static-popup">
                            <div class="acount-popup register-popup">
                                <h3>הרשמה</h3>
                                <h5>עבור משכיר</h5>
                                <form action="@Url.Action("Register","User")" method="post">
                                    <div class="field-form">
                                        <input class="effect-16" type="text" name="fname" required>
                                        <label>שם פרטי</label>
                                        <span class="focus-border"></span>
                                    </div>
                                    <div class="field-form">
                                        <input class="effect-16" type="text" name="lname" required>
                                        <label>שם משפחה</label>
                                        <span class="focus-border"></span>
                                    </div>
                                    <div class="field-form">
                                        <input class="effect-16" type="text" name="phone" required>
                                        <label>טלפון</label>
                                        <span class="focus-border"></span>
                                    </div>
                                    <div class="field-form">
                                        <input class="effect-16" type="text" name="cellphone">
                                        <label>טלפון סלולארי</label>
                                        <span class="focus-border"></span>
                                    </div>
                                    @*<div class="field-form">
                                            <input class="effect-16" type="text" name="address" required>
                                            <label>כתובת</label>
                                            <span class="focus-border"></span>
                                        </div>*@
                                    <div class="pac-card" id="pac-card">
                                     
                                        <div id="pac-container" style="display:block">
                                            <input id="pac-input" type="text"name="address" onblur="blurAddress()"
                                                   placeholder="הכנס כתובת">
                                        </div>
                                    </div>
                                    <div id="map" style="height:250px"></div>
                                    <div id="infowindow-content">
                                        <img src="" width="16" height="16" id="place-icon">
                                        <span id="place-name" class="title"></span><br>
                                        <span id="place-address"></span>
                                    </div>
                                    <!-- Replace the value of the key parameter with your own API key. -->
                                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDjo2Qe6DhOmWvJ8yO7-PzFjTuZ_8zSPCk&libraries=places&callback=initMap"
                                            async defer></script>
                                    <div class="field-form" dir="rtl">
                                        <input class="effect-16" type="text" name="username" required>
                                        <label>שם משתמש (עבור אימות נתונים)</label>
                                        <span class="focus-border"></span>
                                    </div>
                                    <div class="field-form">
                                        <input class="effect-16" type="password" name="password" required minlength="6" maxlength="6">
                                        <label>סיסמה</label>
                                        <span class="focus-border"></span>
                                    </div>
                                    <button type="submit">REGISTER</button>
                                    <input type="hidden" id="errorMsg" name=@ViewBag.errorClass />
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </section>
</body>

<!-- Bootstrap -->

<!-- Icons -->

